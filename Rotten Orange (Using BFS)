#include<bits/stdc++.h>
int minTimeToRot(vector<vector<int>>& grid, int n, int m)
{
        vector<vector<int>>vis(n,vector<int>(m,0));
        queue<pair<int,pair<int,int> > >q;
      for(int i=0;i<n;i++){
          for(int j=0;j<m;j++){
            if(grid[i][j]==2 && !vis[i][j]){
                vis[i][j] = 1;
                q.push({0,{i,j}});
            }
          }
      }
      int deltarow[] = {-1,0,1,0};
      int deltacol[] = {0,1,0,-1};
      int ans = 0;
      while(!q.empty()){
          auto it = q.front();
          q.pop();
          int steps = it.first;
          int row = it.second.first;
          int col = it.second.second;
          ans = max(ans,steps);
         for(int i=0;i<4;i++){
            int nrow = row + deltarow[i];
            int ncol = col + deltacol[i];
          if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]==1 && !vis[nrow][ncol]){
              grid[nrow][ncol] = 2;
              vis[nrow][ncol] = 1;
              q.push({steps+1,{nrow,ncol}});
          }
         }
      }
      for(int i=0;i<n;i++){
          for(int j=0;j<m;j++){
              if(grid[i][j]==1 && !vis[i][j]){
                  return -1;
              }
          }
      }
      return ans;
}
