#include <bits/stdc++.h> 
// Implement class for minStack.
class minStack
{
	stack<int>s;
    int minEle;
	
	public:
		
		// Constructor
		minStack() 
		{ 
			// Write your code here.
		}
		
		// Function to add another element equal to num at the top of stack.
		void push(int val)
		{
		 if(s.size()==0){
           s.push(val);
           minEle = val;
       }
       else if(val>=minEle){
         s.push(val);
       }
       else{
           s.push((long long)2*val - minEle);
           minEle = val;
       }
		}
		
		// Function to remove the top element of the stack.
		int pop()
		{
			if(s.size()==0) return -1 ;
            else if (s.top() >= minEle) {
				     int ans = s.top();
                     s.pop();
					 return ans;
                } else {
					int ans = minEle;
                          minEle = 2 * minEle - s.top();
                          s.pop();
                        return ans;
                        }
                }
		
		// Function to return the top element of stack if it is present. Otherwise return -1.
		int top()
		{
			 if(s.size()==0) return -1;
           else if(s.top()>=minEle) return s.top();
          else return minEle;
		}
		
		// Function to return minimum element of stack if it is present. Otherwise return -1.
		int getMin()
		{
			if(s.size()==0) return -1;
           else return minEle;
		}
};
