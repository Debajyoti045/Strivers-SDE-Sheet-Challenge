#include<bits/stdc++.h>
void find(int col,vector<vector<int>>&ans,vector<vector<int>>&mat,int n,
   vector<int>&leftRow,vector<int>&lowerDiagonal,vector<int>&upperDiagonal){
 if (col == n) {
    vector<int> temp;
    for (auto i : mat)
      for (auto j : i)
           temp.push_back(j);
    ans.push_back(temp);
    return;
  }
    for(int row=0;row<n;row++){
      if(leftRow[row]==0 && lowerDiagonal[row+col]==0 && upperDiagonal[n-1+col-row]==0){
          mat[row][col] = 1;
          leftRow[row] = 1;
          lowerDiagonal[row+col] = 1;
          upperDiagonal[n-1+col-row] = 1;
          find(col+1,ans,mat,n,leftRow,lowerDiagonal,upperDiagonal);
          mat[row][col] = 0;
          leftRow[row] = 0;
          lowerDiagonal[row+col] = 0;
          upperDiagonal[n-1+col-row] = 0;
      }
    }
}
vector<vector<int>> solveNQueens(int n) {
   vector<vector<int>>ans;
  vector<vector<int>> mat(n, vector<int>(n));
   vector<int>leftRow(n,0);
   vector<int>lowerDiagonal(2*n-1,0);
   vector<int>upperDiagonal(2*n-1,0);
   find(0,ans,mat,n,leftRow,lowerDiagonal,upperDiagonal);
   return ans;
}
