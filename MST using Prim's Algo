#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    vector<int>vis(n+1,0);
    priority_queue< pair<int,pair<int,int>>,vector< pair<int,pair<int,int>>>,greater< pair<int,pair<int,int>>>>q;
    q.push({0,{1,-1}});
    
    vector<pair<int,int>>adj[n+1];
    for(auto it:g){
        adj[it.first.first].push_back({it.first.second,it.second});
        adj[it.first.second].push_back({it.first.first,it.second});
    }

    vector<pair<pair<int,int>,int>>ans;
    while(!q.empty()){
        int node = q.top().second.first;
        int parent = q.top().second.second;
        int dis = q.top().first;
        q.pop();
        if(!vis[node]){
            vis[node] = 1;
            if(node!=1)ans.push_back({{parent,node},dis});
          for(auto it:adj[node]){
              int adjnode = it.first;
              int adjwt = it.second;
            if(!vis[adjnode]) q.push({adjwt,{adjnode,node}});
          }
        }
    }
    return ans;
}
