#include<bits/stdc++.h>
string serializeTree(TreeNode<int> *root)
{
     string s = "";
     if(root==NULL) return s;
     queue<TreeNode<int>* >q;
     q.push(root);
     while(!q.empty()){
         TreeNode<int>* temp = q.front();
         q.pop();

         if(temp==NULL){
            s.append("#,");
         }
         else{
             s.append(to_string(temp->data) + ',');
         }
         if(temp!=NULL){
                  q.push(temp->left);
                  q.push(temp->right);
              }
     }
     return s;

}

TreeNode<int>* deserializeTree(string &data)
{
           if(data.size()==0) return NULL;
        stringstream s(data);
        string str;
        getline(s,str,',');
        TreeNode<int>* root = new TreeNode<int>(stoi(str));
        queue<TreeNode<int>*>q;
        q.push(root);
        while(!q.empty()){
            TreeNode<int>* temp = q.front();
            q.pop();

            getline(s,str,',');

            if(str=="#"){
               temp->left = NULL;
            }
            else{
               TreeNode<int>* leftNode = new TreeNode<int>(stoi(str));
               temp->left = leftNode;
               q.push(leftNode);
            }
            

            getline(s,str,',');

            if(str=="#"){
               temp->right = NULL;
            }
            else{
               TreeNode<int>* rightNode = new TreeNode<int>(stoi(str));
               temp->right = rightNode;
               q.push(rightNode);
            }

        }
        return root;

}
