#include<bits/stdc++.h>
void findMedian(int *arr, int n)
{
    priority_queue<int>mxheap;
    priority_queue<int,vector<int>,greater<int>>mnheap;

    for(int i=0;i<n;i++){
        if(mxheap.empty() || mxheap.top()>=arr[i]) mxheap.push(arr[i]);
        else mnheap.push(arr[i]);

        if(mxheap.size()>mnheap.size()+1){
            mnheap.push(mxheap.top());
            mxheap.pop();
        }
        else if(mxheap.size()<mnheap.size()){
            mxheap.push(mnheap.top());
            mnheap.pop();
        }

        if(mnheap.size()<mxheap.size()) cout<<mxheap.top()<<" ";
        else cout<<(mnheap.top()+mxheap.top())/2<<" ";
    }

}
