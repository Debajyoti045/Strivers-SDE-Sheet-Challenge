
vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    map<int,map<int,vector<int>>>mp;
    queue<pair<TreeNode<int>*,pair<int,int>>>q;
    vector<int>ans;
    if(root==NULL) return ans;
    q.push({root,{0,0}});
    while(!q.empty()){
        int size = q.size();
        for(int i=0;i<size;i++){
            TreeNode<int>* temp = q.front().first;
            int vertices = q.front().second.first;
            int level = q.front().second.second;
            q.pop();
            mp[vertices][level].push_back(temp->data);
            if(temp->left){
                q.push({temp->left,{vertices-1,level+1}});
            }
            if(temp->right){
                q.push({temp->right,{vertices+1,level+1}});
            }
        }
    }
    for(auto p:mp){
        for(auto q:p.second){
          for(auto r:q.second) ans.push_back(r);
        }
    }
    return ans;
}
