void dfs(int node,vector<int>&ans,vector<int>&vis,vector<int>adj[]){
    vis[node] = 1;
    ans.push_back(node);
    for(auto it:adj[node]) {
        if(!vis[it]) dfs(it,ans,vis,adj);
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<int>adj[V];
    for(auto it:edges){
        adj[it[0]].push_back(it[1]);
        adj[it[1]].push_back(it[0]);
    }
    vector<int>vis(V,0);
    vector<vector<int>>res;
    for(int i=0;i<V;i++){
        if(!vis[i]){
            vector<int>ans;
            dfs(i,ans,vis,adj);
            res.push_back(ans);
        }
    }
    return res;
}
