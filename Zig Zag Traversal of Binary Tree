vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
   vector<int>ans;
   if(root==NULL) return ans;
   queue<BinaryTreeNode<int> *>q;
   q.push(root);
   bool isleft = true;
   while(!q.empty()){
      int size = q.size();
      vector<int>res;
      for(int i=0;i<size;i++){
          BinaryTreeNode<int> *temp = q.front();
          q.pop();
          res.push_back(temp->data);
          if(temp->left) q.push(temp->left);
          if(temp->right) q.push(temp->right);
      }
      if(isleft){
          for(int i=0;i<res.size();i++) ans.push_back(res[i]);
      }
      else{
          for(int i=res.size()-1;i>=0;i--) ans.push_back(res[i]);
      }
      isleft = !isleft;
   }
   return ans;
}
