int upper_bound(vector<int>arr,int mid){
    int low = 0;
    int high = arr.size() - 1;
    while(low<=high){
        int m = low + (high-low)/2;
        if(arr[m]<=mid) low = m + 1;
        else high = m - 1;
    }
    return low;
}
int getMedian(vector<vector<int>> &matrix)
{
    int low = 1;
    int high = 1e9;
    int n = matrix.size();
    int m = matrix[0].size();
    while(low<=high){
        int mid = low + (high-low)/2;
        int cnt = 0;
        for(int i=0;i<n;i++){
            cnt+=upper_bound(matrix[i],mid);
        }
        if(cnt<=(n*m)/2) low = mid + 1;
        else high = mid - 1;
    }
    return low;
} 
