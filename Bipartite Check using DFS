    #include<bits/stdc++.h>
	bool dfs(int start,vector<int>&color,vector<int>adj[],int col){
        color[start] = col;
        for(auto it:adj[start]){
          if(color[it]==-1){
            if(dfs(it,color,adj,!col)==false) return false;
          }
          else if(color[it]==col) return false;
        }
        return true;
    }
bool isGraphBirpatite(vector<vector<int>> &edges) {
	    int n = edges.size();
		vector<int>adj[n];
		for(int i=0;i<n;i++){
		  for(int j=0;j<n;j++){
			 if(edges[i][j]==1 && i!=j){
				 adj[i].push_back(j);
				 adj[j].push_back(i);
			 }
		  }
		}
        vector<int>color(n,-1);
      for(int i=0;i<n;i++){
          if(color[i]==-1){
              if(dfs(i,color,adj,0)==false) return false;
          }
      }
      return true;
}
